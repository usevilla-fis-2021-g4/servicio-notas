apiVersion: apps/v1
kind: Deployment
metadata:
  name: apinotas
  labels:
    {{- include "backendnotas.labels" . | nindent 4 }}
    app.kubernetes.io/component: apinotas
spec:
  replicas: {{ .Values.apinotas.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: apinotas
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: apinotas
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
        - name: apinotas
          image: {{ .Values.apinotas.image }}:{{ .Values.tag }}
          env:
            - name: MONGO_URL
              valueFrom:
                secretKeyRef: 
                  name: mongodbservicionotas
                  key: mongo_url_servicio_notas
            - name: AWS_ACCESS_KEY_SERVICIO_NOTAS
              value: {{ .Values.AWS_ACCESS_KEY_SERVICIO_NOTAS }}
            - name: AWS_SECRET_KEY_SERVICIO_NOTAS
              value: {{ .Values.AWS_SECRET_KEY_SERVICIO_NOTAS }}
            - name: AWS_BUCKET_NAME_SERVICIO_NOTAS
              value: {{ .Values.AWS_BUCKET_NAME_SERVICIO_NOTAS }}
            - name: AWS_BUCKET_REGION_SERVICIO_NOTAS
              value: {{ .Values.AWS_BUCKET_REGION_SERVICIO_NOTAS }}                                
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          readinessProbe: 
            initialDelaySeconds: 10 
            periodSeconds: 1 
            httpGet: 
              path: /apinotas/v1/healthz
              port: 3000 
          livenessProbe: 
            initialDelaySeconds: 10  
            periodSeconds: 1 
            httpGet: 
              path: /apinotas/v1/healthz
              port: 3000 